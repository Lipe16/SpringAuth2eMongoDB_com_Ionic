<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
<fullyQualifiedTypeName name="org.springframework.security.core.userdetails.UsernameNotFoundException"/>
<fullyQualifiedTypeName name="org.springframework.security.core.userdetails.UserDetails"/>
<fullyQualifiedTypeName name="java.lang.UnsupportedOperationException"/>
<fullyQualifiedTypeName name="org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder"/>
<fullyQualifiedTypeName name="org.springframework.security.config.annotation.web.builders.WebSecurity"/>
<fullyQualifiedTypeName name="org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerConfigurerAdapter"/>
<fullyQualifiedTypeName name="org.springframework.security.oauth2.provider.token.TokenStore"/>
<fullyQualifiedTypeName name="org.springframework.security.oauth2.provider.token.store.InMemoryTokenStore"/>
<fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Qualifier"/>
<fullyQualifiedTypeName name="org.springframework.security.authentication.AuthenticationManager"/>
<fullyQualifiedTypeName name="ferreira.filipe.config.MyUserDetails"/>
<fullyQualifiedTypeName name="ferreira.filipe.service.MyUserDetailService"/>
<fullyQualifiedTypeName name="ferreira.filipe.config.AuthorizationServerConfiguration"/>
<fullyQualifiedTypeName name="org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerConfigurer"/>
<fullyQualifiedTypeName name="org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerEndpointsConfiguration"/>
<fullyQualifiedTypeName name="org.springframework.security.oauth2.config.annotation.web.configurers.AuthorizationServerEndpointsConfigurer"/>
<fullyQualifiedTypeName name="org.springframework.security.oauth2.provider.ClientDetailsService"/>
<fullyQualifiedTypeName name="org.springframework.security.oauth2.config.annotation.configurers.ClientDetailsServiceConfigurer"/>
<fullyQualifiedTypeName name="org.springframework.data.mongodb.core.ScriptOperations"/>
<fullyQualifiedTypeName name="org.springframework.context.annotation.Primary"/>
<fullyQualifiedTypeName name="org.springframework.security.oauth2.provider.token.DefaultTokenServices"/>
<fullyQualifiedTypeName name="org.springframework.security.oauth2.config.annotation.web.configuration.EnableResourceServer"/>
<fullyQualifiedTypeName name="org.springframework.security.oauth2.config.annotation.web.configuration.ResourceServerConfigurerAdapter"/>
<fullyQualifiedTypeName name="org.springframework.security.oauth2.config.annotation.web.configurers.ResourceServerSecurityConfigurer"/>
<fullyQualifiedTypeName name="org.springframework.security.config.annotation.web.builders.HttpSecurity"/>
<fullyQualifiedTypeName name="org.springframework.http.HttpMethod"/>
<fullyQualifiedTypeName name="org.springframework.stereotype.Component"/>
<fullyQualifiedTypeName name="org.springframework.context.ApplicationListener"/>
<fullyQualifiedTypeName name="ferreira.filipe.repository.PerfilRepository"/>
<fullyQualifiedTypeName name="org.springframework.context.event.ContextRefreshedEvent"/>
<fullyQualifiedTypeName name="ferreira.filipe.entity.Perfil"/>
<fullyQualifiedTypeName name="java.util.List"/>
<fullyQualifiedTypeName name="java.util.ArrayList"/>
<fullyQualifiedTypeName name="java.lang.Override"/>
<fullyQualifiedTypeName name="java.lang.System"/>
<fullyQualifiedTypeName name="org.springframework.security.core.GrantedAuthority"/>
<fullyQualifiedTypeName name="java.util.Collection"/>
<fullyQualifiedTypeName name="org.springframework.security.oauth2.config.annotation.web.configuration.EnableAuthorizationServer"/>
<fullyQualifiedTypeName name="org.springframework.context.annotation.Configuration"/>
<fullyQualifiedTypeName name="org.springframework.security.config.annotation.web.configuration.EnableWebSecurity"/>
<fullyQualifiedTypeName name="org.springframework.security.crypto.password.NoOpPasswordEncoder"/>
<fullyQualifiedTypeName name="java.lang.SuppressWarnings"/>
<fullyQualifiedTypeName name="org.springframework.boot.autoconfigure.SpringBootApplication"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RestController"/>
<fullyQualifiedTypeName name="org.springframework.security.crypto.factory.PasswordEncoderFactories"/>
<fullyQualifiedTypeName name="org.springframework.security.authentication.dao.DaoAuthenticationProvider"/>
<fullyQualifiedTypeName name="org.apache.tomcat.util.buf.UDecoder"/>
<fullyQualifiedTypeName name="org.springframework.security.core.userdetails.UserDetailsService"/>
<fullyQualifiedTypeName name="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
<fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
<fullyQualifiedTypeName name="org.springframework.security.crypto.password.PasswordEncoder"/>
<fullyQualifiedTypeName name="org.springframework.security.crypto.bcrypt.BCrypt"/>
<fullyQualifiedTypeName name="org.springframework.context.annotation.Bean"/>
<fullyQualifiedTypeName name="org.apache.catalina.filters.CorsFilter"/>
<fullyQualifiedTypeName name="org.springframework.web.cors.UrlBasedCorsConfigurationSource"/>
<fullyQualifiedTypeName name="org.springframework.web.cors.CorsConfiguration"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.ResponseBody"/>
<fullyQualifiedTypeName name="java.security.Principal"/>
<fullyQualifiedTypeName name="ferreira.filipe.repository.UsuarioRepository"/>
<fullyQualifiedTypeName name="ferreira.filipe.entity.Usuario"/>
</qualifiedTypeNameHistroy>
